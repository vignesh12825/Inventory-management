version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: inventory_postgres_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-inventory_db}
      POSTGRES_USER: ${POSTGRES_USER:-inventory_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - inventory_network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inventory_backend_prod
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-inventory_db}
      - POSTGRES_USER=${POSTGRES_USER:-inventory_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-root}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - API_V1_STR=${API_V1_STR:-/api/v1}
      - PROJECT_NAME=${PROJECT_NAME:-Inventory Management System}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS:-["http://localhost:3000"]}
      - DEBUG=False
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - inventory_network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  # Nginx for serving frontend and reverse proxy
  nginx:
    image: nginx:alpine
    container_name: inventory_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - inventory_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  inventory_network:
    driver: bridge 