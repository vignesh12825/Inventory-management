{"ast":null,"code":"import { toast } from 'react-toastify';\nclass WebSocketService {\n  constructor() {\n    this.ws = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 1000;\n    this.userId = null;\n  }\n  connect(userId) {\n    this.userId = userId || null;\n    const wsUrl = userId ? `ws://localhost:8000/api/v1/ws/alerts/${userId}` : 'ws://localhost:8000/api/v1/ws/alerts';\n    try {\n      this.ws = new WebSocket(wsUrl);\n      this.ws.onopen = () => {\n        console.log('WebSocket connected');\n        this.reconnectAttempts = 0;\n      };\n      this.ws.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          this.handleMessage(data);\n        } catch (error) {\n          console.log('Heartbeat message:', event.data);\n        }\n      };\n      this.ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        this.reconnect();\n      };\n      this.ws.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n    } catch (error) {\n      console.error('Failed to connect WebSocket:', error);\n    }\n  }\n  handleMessage(data) {\n    if (data.type === 'stock_alert') {\n      this.handleStockAlert(data.data);\n    }\n  }\n  handleStockAlert(alertData) {\n    const alertType = alertData.alert_type === 'low_stock' ? 'Low Stock Alert' : 'Out of Stock Alert';\n    const message = `${alertType}: ${alertData.message}`;\n    toast.warning(message, {\n      position: \"top-right\",\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n\n    // Dispatch custom event for components to listen to\n    const event = new CustomEvent('stockAlert', {\n      detail: alertData\n    });\n    window.dispatchEvent(event);\n  }\n  reconnect() {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Reconnecting... Attempt ${this.reconnectAttempts}`);\n      setTimeout(() => {\n        this.connect(this.userId || undefined);\n      }, this.reconnectDelay * this.reconnectAttempts);\n    } else {\n      console.error('Max reconnection attempts reached');\n    }\n  }\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n  send(message) {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(message);\n    }\n  }\n}\nexport const websocketService = new WebSocketService();","map":{"version":3,"names":["toast","WebSocketService","constructor","ws","reconnectAttempts","maxReconnectAttempts","reconnectDelay","userId","connect","wsUrl","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","handleMessage","error","onclose","reconnect","onerror","type","handleStockAlert","alertData","alertType","alert_type","message","warning","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","CustomEvent","detail","window","dispatchEvent","setTimeout","undefined","disconnect","close","send","readyState","OPEN","websocketService"],"sources":["/home/ubuntu/vicky/I2I projects/Inventory management/frontend/src/services/websocket.ts"],"sourcesContent":["import { toast } from 'react-toastify';\n\nclass WebSocketService {\n  private ws: WebSocket | null = null;\n  private reconnectAttempts = 0;\n  private maxReconnectAttempts = 5;\n  private reconnectDelay = 1000;\n  private userId: number | null = null;\n\n  connect(userId?: number) {\n    this.userId = userId || null;\n    const wsUrl = userId \n      ? `ws://localhost:8000/api/v1/ws/alerts/${userId}`\n      : 'ws://localhost:8000/api/v1/ws/alerts';\n    \n    try {\n      this.ws = new WebSocket(wsUrl);\n      \n      this.ws.onopen = () => {\n        console.log('WebSocket connected');\n        this.reconnectAttempts = 0;\n      };\n\n      this.ws.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          this.handleMessage(data);\n        } catch (error) {\n          console.log('Heartbeat message:', event.data);\n        }\n      };\n\n      this.ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        this.reconnect();\n      };\n\n      this.ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n      };\n    } catch (error) {\n      console.error('Failed to connect WebSocket:', error);\n    }\n  }\n\n  private handleMessage(data: any) {\n    if (data.type === 'stock_alert') {\n      this.handleStockAlert(data.data);\n    }\n  }\n\n  private handleStockAlert(alertData: any) {\n    const alertType = alertData.alert_type === 'low_stock' ? 'Low Stock Alert' : 'Out of Stock Alert';\n    const message = `${alertType}: ${alertData.message}`;\n    \n    toast.warning(message, {\n      position: \"top-right\",\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n    // Dispatch custom event for components to listen to\n    const event = new CustomEvent('stockAlert', { detail: alertData });\n    window.dispatchEvent(event);\n  }\n\n  private reconnect() {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Reconnecting... Attempt ${this.reconnectAttempts}`);\n      \n      setTimeout(() => {\n        this.connect(this.userId || undefined);\n      }, this.reconnectDelay * this.reconnectAttempts);\n    } else {\n      console.error('Max reconnection attempts reached');\n    }\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  send(message: string) {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(message);\n    }\n  }\n}\n\nexport const websocketService = new WebSocketService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}