{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{useQuery,useQueryClient}from'react-query';import apiService from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const queryClient=useQueryClient();const{data:user,isLoading,refetch}=useQuery(['currentUser',localStorage.getItem('access_token')],apiService.users.getCurrentUser,{retry:false,enabled:!!localStorage.getItem('access_token'),onSuccess:data=>{console.log('AuthContext: User data received successfully:',data.username);setIsAuthenticated(true);},onError:error=>{var _error$response;console.error('AuthContext error:',error);console.error('AuthContext error details:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);setIsAuthenticated(false);localStorage.removeItem('access_token');localStorage.removeItem('user');}});useEffect(()=>{const token=localStorage.getItem('access_token');if(token){console.log('Token found in localStorage, setting authenticated state');setIsAuthenticated(true);}else{console.log('No token found in localStorage');}},[]);const login=(token,userData)=>{// Clear any cached user data before setting new user\nqueryClient.removeQueries(['currentUser']);localStorage.setItem('access_token',token);localStorage.setItem('user',JSON.stringify(userData));setIsAuthenticated(true);};const logout=()=>{// Clear cached user data on logout\nqueryClient.removeQueries(['currentUser']);localStorage.removeItem('access_token');localStorage.removeItem('user');setIsAuthenticated(false);window.location.href='/login';};const refetchUser=()=>{// Clear cache and refetch fresh data\nqueryClient.removeQueries(['currentUser']);refetch();};const value={user:user||null,isLoading,isAuthenticated,login,logout,refetchUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useQuery","useQueryClient","apiService","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","queryClient","data","user","isLoading","refetch","localStorage","getItem","users","getCurrentUser","retry","enabled","onSuccess","console","log","username","onError","error","_error$response","response","removeItem","token","login","userData","removeQueries","setItem","JSON","stringify","logout","window","location","href","refetchUser","value","Provider","useAuth","context","Error"],"sources":["/home/ubuntu/vicky/I2I projects/Inventory management/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport apiService from '../services/api';\nimport { UserWithPermissions } from '../types';\n\ninterface AuthContextType {\n  user: UserWithPermissions | null;\n  isLoading: boolean;\n  isAuthenticated: boolean;\n  login: (token: string, userData: UserWithPermissions) => void;\n  logout: () => void;\n  refetchUser: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const queryClient = useQueryClient();\n\n  const { data: user, isLoading, refetch } = useQuery(\n    ['currentUser', localStorage.getItem('access_token')],\n    apiService.users.getCurrentUser,\n    {\n      retry: false,\n      enabled: !!localStorage.getItem('access_token'),\n      onSuccess: (data) => {\n        console.log('AuthContext: User data received successfully:', data.username);\n        setIsAuthenticated(true);\n      },\n      onError: (error: any) => {\n        console.error('AuthContext error:', error);\n        console.error('AuthContext error details:', error.response?.data);\n        setIsAuthenticated(false);\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('user');\n      },\n    }\n  );\n\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      console.log('Token found in localStorage, setting authenticated state');\n      setIsAuthenticated(true);\n    } else {\n      console.log('No token found in localStorage');\n    }\n  }, []);\n\n  const login = (token: string, userData: UserWithPermissions) => {\n    // Clear any cached user data before setting new user\n    queryClient.removeQueries(['currentUser']);\n    localStorage.setItem('access_token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setIsAuthenticated(true);\n  };\n\n  const logout = () => {\n    // Clear cached user data on logout\n    queryClient.removeQueries(['currentUser']);\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    window.location.href = '/login';\n  };\n\n  const refetchUser = () => {\n    // Clear cache and refetch fresh data\n    queryClient.removeQueries(['currentUser']);\n    refetch();\n  };\n\n  const value: AuthContextType = {\n    user: user || null,\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    refetchUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}